{% set currentUrl %}{{ page.url }}{% endset %}

<header class="header">
    <h2 class="header__title h-card">
        <a {% if currentUrl === '/' %}aria-current="page"{% endif %} href="/" class="u-url p-name" rel="me">Helen Chong</a>
    </h2>
    <button class="header__toggle" aria-label="Toggle navigation menu">â˜°</button>
    <nav class="header__navmenu">
        <ul class="header__links">
            {% set navPages = collections.all | eleventyNavigation %}
            {%- for entry in navPages %}
                <li><a
                    {% if entry.url == page.url %}aria-current="page"{% endif %}
                    class="header__link {% if '/blog' in currentUrl and '/blog' in entry.url or '/projects' in currentUrl and '/projects' in entry.url %}link--active{% endif %}"
                    href="{{ entry.url }}">
                        {{ entry.title }}
                </a></li>
            {%- endfor %}
        </ul>
    </nav>
</header>

<style>
    .header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        padding: 1rem 1.5rem;
        position: sticky;
        top: 0;
        background-color: var(--clr-white);
        box-shadow: var(--box-shadow);
    }

    .header__title {
        color: var(--clr-accent-600);
        text-transform: uppercase;
        font-size: 2rem;
        margin: 0;
    }

    .header__title a:focus,
    .header__toggle:focus {
        outline: 0.12em solid var(--clr-accent-600);
    }

    .header__title > a {
        text-decoration: none;
    }

    .header__navmenu {
        padding: 2em 0 0.5em;
        margin: 0 auto;
        display: none;
    }

    .header__links {
        list-style: none;
        padding: 0;
        margin: 0;
        display: grid;
        gap: 1.5em;
        font-size: 1.125rem;
        font-weight: 600;
        color: var(--clr-accent-600);
        text-align: center;
    }

    .header__links [aria-current="page"],
    .link--active {
        color: var(--clr-link-hover);
    }

    .header__link {
        position: relative;
        font-size: 1.125rem;
        text-decoration: none;
    }

    .header__link::after {
        content: "";
        left: 0px;
        bottom: -4px;
        height: 2px;
        width: 100%;
        position: absolute;
        background-color: var(--clr-link-hover);
        transform: scaleX(0);
        transition: transform 0.3s ease 0s;
    }

    .header__link:hover::after,
    .header__links [aria-current="page"]::after,
    .link--active::after {
        transform: scaleX(1);
    }

    .header__link:focus {
        outline: 0.2em solid var(--clr-accent-600);
        outline-offset: 0.1em;
    }

    .header__toggle {
        border: none;
        background-color: transparent;
        font-size: 2rem;
    }

    .header__links--show {
        display: grid;
    }

    /* For larger screen sizes */
    @media (min-width: 640px) {
        .header__title {
            margin-bottom: 0;
        }
    }

    /* Tablet screen size */
    @media only screen and (min-width: 43.75rem) {
        .header__toggle {
            display: none;
        }

        .header__navmenu {
            display: flex;
            padding: 0;
            margin: 0;
        }

        .header__links {
            display: flex;
            flex-wrap: wrap;
            flex-direction: row;
        }
    }
</style>

<script defer>
    {# Accessible hamburger menu navigation script based on:
    https://accessibleweb.dev/navigation #}
    const headerToggle = document.querySelector(".header__toggle");
    const headerNavMenu = document.querySelector(".header__navmenu");
    const headerLinkAll = document.querySelectorAll(".header__link");

    const openNavigation = () => {
        headerNavMenu.classList.add("header__links--show");
        headerToggle.ariaExpanded = "true";
    };

    const closeNavigation = () => {
        headerNavMenu.classList.remove("header__links--show");
        headerToggle.ariaExpanded = "false";
    };

    const toggleNavigation = () => {
        const open = headerToggle.ariaExpanded;
        open === "false" ? openNavigation() : closeNavigation();
    }

    headerToggle.addEventListener("click", toggleNavigation);

    window.addEventListener("keyup", (e) => {
        if (e.key === "Escape") {
            headerToggle.focus();
            closeNavigation();
        }
    });

    const handleBlur = (event) => {
        const navList = event.currentTarget.closest(".header__navmenu");
        if (!event.relatedTarget || !navList.contains(event.relatedTarget)) {
            closeNavigation();
        }
    };

    headerLinkAll[headerLinkAll.length - 1].addEventListener("blur", handleBlur);
</script>